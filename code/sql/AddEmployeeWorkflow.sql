
/*
Define the basic hire employee workflow.
*/
use dfa;

SET ROLE dfa_admin;

START TRANSACTION;

delete from LKUP_CONSTRAINT_APP_ROLE where APPLICATION_ID=1000 and CONSTRAINT_ID=1 AND ROLE_NM='USER';

delete from LKUP_CONSTRAINT_APP where APPLICATION_ID=1000 and CONSTRAINT_ID=1;

delete from LKUP_APPLICATION where APPLICATION_ID=1000;
delete from LKUP_WORKFLOW_TYP where WORKFLOW_TYP = 1000;

UPDATE LKUP_STATE SET EXPECTED_NEXT_EVENT = NULL WHERE STATE_TYP BETWEEN 1000 AND 1004;

DELETE FROM LKUP_EVENT_STATE_TRANS WHERE EVENT_TYP BETWEEN 1000 AND 1007;
DELETE FROM LKUP_EVENT_STATE_TRANS WHERE STATE_TYP BETWEEN 1000 AND 1004;

DELETE FROM LKUP_STATE WHERE STATE_TYP BETWEEN 1000 AND 1004;
DELETE FROM LKUP_EVENT WHERE EVENT_TYP BETWEEN 1000 AND 1007;

INSERT INTO `dfa`.`LKUP_EVENT`
(`EVENT_TYP`,
`EVENT_NM`,
`EVENT_TX`,
`MOD_BY`)
VALUES
(1000,
'Schedule Interview',
'Schedule Interview',
'DFA Admin');

INSERT INTO `dfa`.`LKUP_EVENT`
(`EVENT_TYP`,
`EVENT_NM`,
`EVENT_TX`,
`MOD_BY`)
VALUES
(1001,
'Decline Interview',
'Employer Not Interested in Prospect',
'DFA Admin');

INSERT INTO `dfa`.`LKUP_EVENT`
(`EVENT_TYP`,
`EVENT_NM`,
`EVENT_TX`,
`MOD_BY`)
VALUES
(1002,
'No Interest',
'Prospect Not Interested in Job',
'DFA Admin');

INSERT INTO `dfa`.`LKUP_EVENT`
(`EVENT_TYP`,
`EVENT_NM`,
`EVENT_TX`,
`MOD_BY`)
VALUES
(1003,
'Hire',
'Hire Employee',
'DFA Admin');

INSERT INTO `dfa`.`LKUP_EVENT`
(`EVENT_TYP`,
`EVENT_NM`,
`EVENT_TX`,
`MOD_BY`)
VALUES
(1004,
'No Hire',
'Do Not Hire Prospect',
'DFA Admin');

INSERT INTO `dfa`.`LKUP_EVENT`
(`EVENT_TYP`,
`EVENT_NM`,
`EVENT_TX`,
`MOD_BY`)
VALUES
(1005,
'Offer Accepted',
'Job Offer Accepted',
'DFA Admin');

INSERT INTO `dfa`.`LKUP_EVENT`
(`EVENT_TYP`,
`EVENT_NM`,
`EVENT_TX`,
`MOD_BY`)
VALUES
(1006,
'Offer Rejected',
'Job Offer Rejected',
'DFA Admin');

INSERT INTO `dfa`.`LKUP_EVENT`
(`EVENT_TYP`,
`EVENT_NM`,
`EVENT_TX`,
`ATTENTION`,
`MOD_BY`)
VALUES
(1007,
'No Response',
'No Response to Offer from Prospect'
,1
,'DFA Admin');

-- Add the states and transitions.

INSERT INTO `dfa`.`LKUP_STATE`
(`STATE_TYP`,
`STATE_NM`,
`STATE_TX`,
`MOD_BY`)
VALUES
(1000,
'Prospect Identified',
'Employee Prospect Identified',
'DFA Admin');

-- Model the two terminal states first.
INSERT INTO `dfa`.`LKUP_STATE`
(`STATE_TYP`,
`STATE_NM`,
`STATE_TX`,
`ACTIVE`,
`MOD_BY`)
VALUES
(1001,
'Not Hired',
'Prospect Not Hired',
0,
'DFA Admin');

INSERT INTO `dfa`.`LKUP_STATE`
(`STATE_TYP`,
`STATE_NM`,
`STATE_TX`,
`ACTIVE`,
`MOD_BY`)
VALUES
(1002,
'Hired',
'Employee Hired',
0,
'DFA Admin');

INSERT INTO `dfa`.`LKUP_STATE`
(`STATE_TYP`,
`STATE_NM`,
`STATE_TX`,
`MOD_BY`)
VALUES
(1003,
'Interview Scheduled',
'Interview Scheduled',
'DFA Admin');

INSERT INTO `dfa`.`LKUP_EVENT_STATE_TRANS`
(`STATE_TYP`,
`EVENT_TYP`,
`NEXT_STATE_TYP`,
`MOD_BY`)
VALUES
(1000,
1000,
1003,
'DFA Admin');

-- This is the expected or normal flow.
UPDATE LKUP_STATE SET EXPECTED_NEXT_EVENT = 1000 where STATE_TYP=1000;

INSERT INTO `dfa`.`LKUP_EVENT_STATE_TRANS`
(`STATE_TYP`,
`EVENT_TYP`,
`NEXT_STATE_TYP`,
`MOD_BY`)
VALUES
(1000,
1001,
1001,
'DFA Admin');

INSERT INTO `dfa`.`LKUP_EVENT_STATE_TRANS`
(`STATE_TYP`,
`EVENT_TYP`,
`NEXT_STATE_TYP`,
`MOD_BY`)
VALUES
(1000,
1002,
1001,
'DFA Admin');

INSERT INTO `dfa`.`LKUP_STATE`
(`STATE_TYP`,
`STATE_NM`,
`STATE_TX`,
`MOD_BY`)
VALUES
(1004,
'Offer Sent',
'Offer Sent',
'DFA Admin');

INSERT INTO `dfa`.`LKUP_EVENT_STATE_TRANS`
(`STATE_TYP`,
`EVENT_TYP`,
`NEXT_STATE_TYP`,
`MOD_BY`)
VALUES
(1003,
1003,
1004,
'DFA Admin');

update LKUP_STATE SET EXPECTED_NEXT_EVENT=1003 WHERE STATE_TYP = 1003;

INSERT INTO `dfa`.`LKUP_EVENT_STATE_TRANS`
(`STATE_TYP`,
`EVENT_TYP`,
`NEXT_STATE_TYP`,
`MOD_BY`)
VALUES
(1003,
1004,
1001,
'DFA Admin');

INSERT INTO `dfa`.`LKUP_EVENT_STATE_TRANS`
(`STATE_TYP`,
`EVENT_TYP`,
`NEXT_STATE_TYP`,
`MOD_BY`)
VALUES
(1004,
1005,
1002,
'DFA Admin');

UPDATE LKUP_STATE SET EXPECTED_NEXT_EVENT = 1005 WHERE STATE_TYP = 1004;

INSERT INTO `dfa`.`LKUP_EVENT_STATE_TRANS`
(`STATE_TYP`,
`EVENT_TYP`,
`NEXT_STATE_TYP`,
`MOD_BY`)
VALUES
(1004,
1006,
1001,
'DFA Admin');

INSERT INTO `dfa`.`LKUP_EVENT_STATE_TRANS`
(`STATE_TYP`,
`EVENT_TYP`,
`NEXT_STATE_TYP`,
`MOD_BY`)
VALUES
(1004,
1007,
1001,
'DFA Admin');

INSERT INTO `dfa`.`LKUP_WORKFLOW_TYP`
(`WORKFLOW_TYP`,
`WORKFLOW_NM`,
`WORKFLOW_TX`,
`START_STATE_TYP`,
`MOD_BY`)
VALUES
(1000,
'Hire Employee',
'Hire Employee',
1000,
'DFA Admin');

INSERT INTO `dfa`.`LKUP_APPLICATION`
(`APPLICATION_ID`,
`APPLICATION_NM`,
`APPLICATION_DESC`,
`MOD_BY`)
VALUES
(1000,
'Employee',
'Employee Hiring Application',
'DFA Admin');

-- Set up basic role.

INSERT INTO LKUP_CONSTRAINT_APP (APPLICATION_ID,CONSTRAINT_ID,MOD_BY)
	VALUES (1000,1,'DFA Admin');


COMMIT;

set role dfa_user;

select LKUP_EVENT.EVENT_NM as EXPECTED_NEXT_EVENT, LKUP_STATE.* from LKUP_STATE JOIN LKUP_EVENT ON LKUP_EVENT.EVENT_TYP = LKUP_STATE.EXPECTED_NEXT_EVENT;

SELECT CURRENT_STATE.STATE_NM, LKUP_EVENT.EVENT_NM, LKUP_EVENT.MAKE_CURRENT, NEXT_STATE.STATE_NM as NEXT_STATE_NM, NEXT_STATE.ACTIVE, LKUP_EVENT_STATE_TRANS.* FROM LKUP_EVENT_STATE_TRANS JOIN LKUP_STATE CURRENT_STATE ON CURRENT_STATE.STATE_TYP = LKUP_EVENT_STATE_TRANS.STATE_TYP
	JOIN LKUP_EVENT ON LKUP_EVENT.EVENT_TYP = LKUP_EVENT_STATE_TRANS.EVENT_TYP
    JOIN LKUP_STATE NEXT_STATE ON NEXT_STATE.STATE_TYP = LKUP_EVENT_STATE_TRANS.NEXT_STATE_TYP;

